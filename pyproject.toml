[tool.poetry]
name = "nshconfig"
version = "0.28.1"
description = "Fully typed configuration management, powered by Pydantic"
authors = ["Nima Shoghi <nimashoghi@gmail.com>"]
readme = "README.md"

[tool.poetry.urls]
homepage = "https://github.com/nimashoghi/nshconfig"

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "*"
pydantic-settings = "*"
typing-inspect = "*"
treescope = { version = "*", optional = true }
PyYAML = { version = "*", optional = true }
toml = { version = "*", optional = true }

[tool.poetry.group.dev.dependencies]
pyright = "*"
ruff = "*"
ipykernel = "*"
ipywidgets = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
typeCheckingMode = "standard"
deprecateTypingAliases = true
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
reportPrivateImportUsage = false

[tool.ruff.lint]
select = ["FA102", "FA100"]
ignore = ["F722", "F821", "E731", "E741"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.poetry.extras]
extra = ["treescope", "PyYAML", "toml"]

[tool.poetry.scripts]
nshconfig-export = "nshconfig.bin.export:main"
